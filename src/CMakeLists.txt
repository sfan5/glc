IF (EXTERNAL_PACKETSTREAM)
  FIND_PACKAGE(PACKETSTREAM)
ELSE (EXTERNAL_PACKETSTREAM)
  MESSAGE(STATUS "Using internal packetstream")
  ADD_SUBDIRECTORY(packetstream)
  SET(PACKETSTREAM_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/src/packetstream/src)
  SET(PACKETSTREAM_LIBRARY packetstream)
  LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/src/packetstream)
ENDIF (EXTERNAL_PACKETSTREAM)

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src ${PACKETSTREAM_INCLUDE_DIR})
LINK_DIRECTORIES(${PROJECT_BINARY_DIR}/src/glc ${PROJECT_SOURCE_DIR}/src/packetstream)

SET(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake_modules")

IF (UNIX)
  SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fvisibility=hidden")
  ADD_DEFINITIONS("-D_GNU_SOURCE")
  ADD_DEFINITIONS("-D_FILE_OFFSET_BITS=64")
ENDIF (UNIX)

ADD_SUBDIRECTORY(glc)

IF (HOOK)
  IF (EXTERNAL_ELFHACKS)
    FIND_PACKAGE(ELFHACKS)
  ELSE (EXTERNAL_ELFHACKS)
    MESSAGE(STATUS "Using internal elfhacks")
    ADD_SUBDIRECTORY(elfhacks)
    SET(ELFHACKS_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/src/elfhacks/src)
    SET(ELFHACKS_LIBRARY elfhacks)
    LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/src/elfhacks)
  ENDIF (EXTERNAL_ELFHACKS)
  INCLUDE_DIRECTORIES(${ELFHACKS_INCLUDE_DIR})

  ADD_SUBDIRECTORY(hook)
ENDIF (HOOK)

IF (BINARIES)
  ADD_EXECUTABLE(capture capture.c)
  TARGET_LINK_LIBRARIES(capture dl)
  SET_TARGET_PROPERTIES(capture PROPERTIES
  			OUTPUT_NAME glc-capture)

  ADD_EXECUTABLE(play play.c)
  TARGET_LINK_LIBRARIES(play glc-core glc-play glc-export ${PACKETSTREAM_LIBRARY})
  SET_TARGET_PROPERTIES(play PROPERTIES
  			OUTPUT_NAME glc-play)

  IF (UNIX)
    INSTALL(TARGETS capture play
    	  RUNTIME DESTINATION bin)
  ENDIF (UNIX)
ENDIF (BINARIES)

